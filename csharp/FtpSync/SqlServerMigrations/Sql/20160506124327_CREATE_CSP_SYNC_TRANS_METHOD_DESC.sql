CREATE PROCEDURE CSP_SYNC_TRANS_METHOD_DESC

      @TableParam TVP_TRANS_METHOD_DESC READONLY

AS
BEGIN

	BEGIN TRY
		
		BEGIN TRANSACTION

			MERGE TRANS_METHOD_DESC WITH (TABLOCK) AS TARGET USING @TableParam AS SOURCE ON 
			
				TARGET.TRANS_METHOD = SOURCE.TRANS_METHOD
		
			WHEN MATCHED AND (
		
				TARGET.DESC != SOURCE.DESC OR
				TARGET.DEL != SOURCE.DEL OR
				TARGET.DEL_FOCUS != SOURCE.DEL_FOCUS OR
				TARGET.UPD_STAMP != SOURCE.UPD_STAMP OR
				TARGET.UPD_USER_ID != SOURCE.UPD_USER_ID OR
				TARGET.STATUS != SOURCE.STATUS OR
				TARGET.ENT_STAMP != SOURCE.ENT_STAMP OR
				TARGET.ENT_USER_ID != SOURCE.ENT_USER_ID OR
				TARGET.CHG != SOURCE.CHG OR
				TARGET.CARD_TYPE != SOURCE.CARD_TYPE )

			THEN UPDATE SET 

				TARGET.DESC = SOURCE.DESC,
				TARGET.DEL = SOURCE.DEL,
				TARGET.DEL_FOCUS = SOURCE.DEL_FOCUS,
				TARGET.UPD_STAMP = SOURCE.UPD_STAMP,
				TARGET.UPD_USER_ID = SOURCE.UPD_USER_ID,
				TARGET.STATUS = SOURCE.STATUS,
				TARGET.ENT_STAMP = SOURCE.ENT_STAMP,
				TARGET.ENT_USER_ID = SOURCE.ENT_USER_ID,
				TARGET.CHG = SOURCE.CHG,
				TARGET.CARD_TYPE = SOURCE.CARD_TYPE

			WHEN NOT MATCHED BY TARGET THEN INSERT (

				TRANS_METHOD,
				DESC,
				DEL,
				DEL_FOCUS,
				UPD_STAMP,
				UPD_USER_ID,
				STATUS,
				ENT_STAMP,
				ENT_USER_ID,
				CHG,
				CARD_TYPE )

			VALUES (

				SOURCE.TRANS_METHOD,
				SOURCE.DESC,
				SOURCE.DEL,
				SOURCE.DEL_FOCUS,
				SOURCE.UPD_STAMP,
				SOURCE.UPD_USER_ID,
				SOURCE.STATUS,
				SOURCE.ENT_STAMP,
				SOURCE.ENT_USER_ID,
				SOURCE.CHG,
				SOURCE.CARD_TYPE )
			
			WHEN NOT MATCHED BY SOURCE

				THEN DELETE

			OPTION (LOOP JOIN);
		
		COMMIT TRANSACTION;

	END TRY
	
	BEGIN CATCH

		ROLLBACK TRANSACTION;
		
		THROW;

	END CATCH;

END;